// Robot factory generative model
// CEK, December 2016

// ----------- define properties -------------------

var dim_high_a = function () { gaussian(30, 20) }
var dim_high_b = function () { gaussian(50, 20) }
//var dim_low_1 = function () { gaussian(20, 5) }
//var dim_low_2 = function () { gaussian(40, 5) }
var dim_low = function () { flip() ? gaussian(20,5) : gaussian(40,5)}
var dim_static = function () { 10 }
var dim_body1 = function () { 20 }
var dim_body2 = function () { 1 }
var dim_eye = function () { 4 }
//var shape = function () { flip() ? 'circle' : 'rect' }
var shape = function () { 'rect' }
var xpos = function (x) { x }//worldWidth/2}//uniform(100, worldWidth - 100) }
var ypos = function (y) { y }//worldHeight/2}//uniform(100, worldHeight - 100) }
var eye = function () { 'circle' }
var ground = {shape: 'rect',
              static: true,
              dims: [worldWidth, 10],
              x: worldWidth/2,
              y: worldHeight}

// ----------- shared features -------------------

var body = function () {
  return {shape: shape(), 
          static: true, 
          dims: [dim_body2(), dim_body1()], 
          x: xpos(worldWidth/2), 
          y: ypos(worldHeight-50)}
}

var eye1 = function () {
  return {shape: eye(), static: true, dims: [dim_eye(), dim_eye()], x: xpos(worldWidth/2 - 7), y: ypos(worldHeight - 78.5)}
}

var eye2 = function () {
  return {shape: eye(), static: true, dims: [dim_eye(), dim_eye()], x: xpos(worldWidth/2 + 7), y: ypos(worldHeight - 78.5)}
}

var top = function () {
  return {shape: shape(), static: true, dims: [dim_low(), dim_static()], x: xpos(worldWidth/2), y: ypos(worldHeight - 80)}
}


// ----------- robot type 1 -------------------

var bottom_a = function () {
  return {shape: shape(), static: true, dims: [dim_high_a(), dim_static()], x: xpos(worldWidth/2), y: ypos(worldHeight- 20)}
}

var robot_a=[ground, top(), bottom_a(), body(), eye1(), eye2()];


// ----------- robot type 2 -------------------

var bottom_b = function () {
  return {shape: shape(), static: true, dims: [dim_high_b(), dim_static()], x: xpos(worldWidth/2), y: ypos(worldHeight- 20)}
}

var robot_b=[ground, top(), bottom_b(), body(), eye1(), eye2()];


// ----------- create world -------------------

var whichRobot = function () { flip() ? robot_a : robot_b }

var fallingWorld = whichRobot()
physics.animate(10,fallingWorld);